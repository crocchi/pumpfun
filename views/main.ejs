<!DOCTYPE HTML>
<html>

<head>
	<title>ScrockBot v.02</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="../public/assetsClient/css/main.css" />
</head>

<body class="is-preload">

	<!-- Wrapper -->
	<div id="wrapper">

		<!-- Main -->
		<div id="main">
			<div class="inner">

				<!-- Header -->
				<header id="header">
					<a href="index.html" class="logo"><strong style="font-size:larger;">ScrockBot </strong><span
							style="font-size: small;"> SniperBot Solana</span> </a>
					<ul class="icons">
						<li><a href="#" class="icon brands fa-house"><span class="label">Twitter</span></a></li>
						<li><a href="#" class="icon brands fa-facebook-f"><span class="label">Facebook</span></a></li>
					</ul>
				</header>

				<!-- Banner
								<section id="banner">
									<div class="content">
										<header>
											<h1>Hi, I’m Editorial<br />
											by HTML5 UP</h1>
											<p>A free and fully responsive site template</p>
										</header>
										<p>Aenean ornare velit lacus, ac varius enim ullamcorper eu. Proin aliquam facilisis ante interdum congue. Integer mollis, nisl amet convallis, porttitor magna ullamcorper, amet egestas mauris. Ut magna finibus nisi nec lacinia. Nam maximus erat id euismod egestas. Pellentesque sapien ac quam. Lorem ipsum dolor sit nullam.</p>
										<ul class="actions">
											<li><a href="#" class="button big">Learn More</a></li>
										</ul>
									</div>
									<span class="image object">
										<img src="images/pic10.jpg" alt="" />
									</span>
								</section> -->

				<!-- Section -->
				<section>
					<div class="table-wrapper">
						<h4>TokenLogger</h4>
						<table>
							<thead>
								<tr>
									<th>Token</th>
									<th>Price</th>
									<th>BuyPrice</th>
									<th>StartPrice</th>
									<th>HighPrice</th>


									<th>Trx Num</th>
									<th>TrxList</th>

									<th>MarketCap SOL</th>
									<th>VolumeNet</th>

									<th>Volume</th>
									<th>Data</th>

									<th>Pool</th>
									<th>info</th>
									<th>Gain</th>
								</tr>
							</thead>
							<tbody id="tokenMonitorBody">

							</tbody>
							<tfoot>
								<tr>
									<td colspan="2"></td>
									<td>100.00</td>
								</tr>
							</tfoot>
						</table>
					</div>

					<br>
					<div class="table-wrapper">
						<h4>TokenMonitor</h4>
						<table class="alt">
							<thead>
								<tr>
									<th>Name</th>
									<th>Price</th>
									<th>Trx Numb</th>
									<th>MarketCap Sol</th>
									<th>VolumeNet</th>
									<th>Volume</th>
									<th>Time</th>
									<th>Pool</th>


								</tr>
							</thead>
							<tbody id="tokenLoggerBody">
								<!--
								<tr>
									<td>BonkFun</td>
									<td>SOL: 0.000023</td>
									<td>10%</td>
									<td>$9233</td>
									<td>42 </td>
									<td>10:00am</td>
									
								</tr>
								-->
							</tbody>
							<tfoot>
								<tr>
									<td colspan="2"></td>
									<td>100.00</td>
								</tr>
							</tfoot>
						</table>
					</div>


				</section>
				<section>
					<header class="major">
						<h2>Event</h2>
					</header>

					<textarea id="loggerEvent" name="demo-message" id="demo-message" placeholder="Event"
						rows="10">

 				</textarea>
				</section>

				<section>
					<header class="major">
						<h2>Logger</h2>
					</header>

					<textarea id="loggerHtml" name="demo-message" id="demo-message" placeholder="Enter your message"
						rows="10">

 				</textarea>
				</section>

				<div id="modal" class="modal">
					<div class="modal-content">
						<span id="close">&times;</span>
						<h2>Transazioni Token</h2>
						<ul id="txList"></ul>
					</div>
				</div>

				<!-- Section 
				<section>
					<header class="major">
						<h2>Ipsum sed dolor</h2>
					</header>
					<div class="posts">
						<article>
							<a href="#" class="image"><img src="images/pic01.jpg" alt="" /></a>
							<h3>Interdum aenean</h3>
							<p>Aenean ornare velit lacus, ac varius enim lorem ullamcorper dolore. Proin aliquam
								facilisis ante interdum. Sed nulla amet lorem feugiat tempus aliquam.</p>
							<ul class="actions">
								<li><a href="#" class="button">More</a></li>
							</ul>
						</article>
						<article>
							<a href="#" class="image"><img src="images/pic02.jpg" alt="" /></a>
							<h3>Nulla amet dolore</h3>
							<p>Aenean ornare velit lacus, ac varius enim lorem ullamcorper dolore. Proin aliquam
								facilisis ante interdum. Sed nulla amet lorem feugiat tempus aliquam.</p>
							<ul class="actions">
								<li><a href="#" class="button">More</a></li>
							</ul>
						</article>

					</div>
				</section>-->

			</div>
		</div>

		<!-- Sidebar -->
		<div id="sidebar">
			<div class="inner">

				<!-- Search -->
				<section id="search" class="alt">
					<form method="post" action="#">
						<input type="text" name="query" id="query" placeholder="Search" />
					</form>
				</section>

				<!-- Menu -->
				<nav id="menu">
					<!--
					<header class="major">
						<h2>Menu</h2>
					</header>
					<ul>
						<li><a href="index.html">Homepage</a></li>

						<li>
							<span class="opener">Submenu</span>
							<ul>
								<li><a href="#">Lorem Dolor</a></li>
								<li><a href="#">Ipsum Adipiscing</a></li>
								<li><a href="#">Tempus Magna</a></li>
								<li><a href="#">Feugiat Veroeros</a></li>
							</ul>
						</li>

					</ul>
					-->
				</nav>

				<!-- Section -->
				<section>
					<header class="major">
						<h2>Config</h2>
					</header>

					<form method="post" onsubmit="return saveOptions(event)">
						<div class="row gtr-uniform">

							<div class="col-12">
								<h3>Filtri Token</h3>
							</div>

							<div class="col-12">
								<input type="number" step="0.10" value="" id="liquidityMin" placeholder="MinLiquidity">
								<label>Min Liquidity (SOL)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.10" id="liquidityMax">
								<label for="liquidityMax">Max Liquidity (SOL)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.10" id="devShare">
								<label for="devShare">Dev Share max buy (%)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.10" id="marketcapMin">
								<label for="marketcapMin">Min Market Cap (SOL)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.5" id="marketcapMax">
								<label for="marketcapMax">Max Market Cap (SOL)</label>
							</div>

							<div class="col-12">

								<input type="checkbox" id="enablerugpullxyz">
								<label for="enablerugpullxyz">RugPull.xyz check</label>

							</div>
							<div class="col-12">
								<h3>Sell</h3>
							</div>
							<div class="col-12">
								<input type="number" step="0.01" id="quickSellMultiplier">
								<label for="quickSellMultiplier">Quick Sell × Multiplier</label>
							</div>
							<div class="col-12">
								<input type="number" step="1" id="quickSellMinTrades">
								<label for="quickSellMinTrades">Quick Sell min trades</label>
							</div>
							<div class="col-12">
								<input type="number" step="1" id="rugpullMaxTrades">
								<label for="rugpullMaxTrades">Rugpull max trades</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.01" id="rugpullMinGainMultiplier">
								<label for="rugpullMinGainMultiplier">Rugpull min gain × Multiplier</label>
							</div>
							<div class="col-12">
								<hr>
							</div>


							<div class="col-12">
								<h3>Monitor Token </h3>
							</div>
							<div class="col-12">

								<input type="number" step="0.10" id="timeMonitor">
								<label for="timeMonitor">Timer Monitor(sec)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.01" id="volumeMinMonitor">
								<label for="volumeMinMonitor">Net Volume Min (SOL)</label>
							</div>
							<div class="col-12">
								<input type="number" step="0.01" id="minVolumeMonitor">
								<label for="maxSuspiciousGain">Volume Min</label>
							</div>
							<div class="col-12">
								<input type="number" step="1" id="maxTrxNumMonitor">
								<label for="maxTrxNumMonitor">Max Trades</label>
							</div>
							<div class="col-12">

								<input type="number" step="0.10" id="minTrxNumMonitor">
								<label for="minTrxNumMonitor">Min Trades</label>
							</div>
							
							<div class="col-12 cool">
								<input type="checkbox" id="netVolumeUpBuy">
								<label for="netVolumeUpBuy">Buy Quick if > </label>
				
								<input type="number" step="0.1" id="quickBuyVolumeUp">
								<label for="quickBuyVolumeUp">Net Volume Min</label>

								<input type="number" step="1" id="quickBuyTrxNumb">
								<label for="quickBuyTrxNumb">Min Trx</label>

								<input type="number" step="1" id="quickBuyVolumeMin">
								<label for="quickBuyTrxNumb">Volume Min</label>
							</div>

							<div class="col-12 cool">
								<input type="checkbox" id="marketCapSolUpMode">
								<label for="marketCapSolUpMode">Buy Quick if [MarketCap] >  </label>

								<input type="number" step="1" id="marketCapSolUpQuickBuy">
								<label for="marketCapSolUpQuickBuy">Market Cap Sol</label>
							</div>



							<div class="col-12">
								<hr>
							</div>
							<div class="col-12">
								<h3>Buy Snipe Token</h3>
							</div>
							<div class="col-12">

								<input type="number" step="0.005" id="buyAmount">
								<label for="buyAmount">Buy Amount: </label>
							</div>
							<div class="col-12">

								<input type="number" step="1" id="sellOffPanic">
								<label for="sellOffPanic">SellPanic: %</label>
							</div>
							<div class="col-12">
								<input type="checkbox" id="demoversion" value="demoversion">
								<label for="demoversion">demo</label>
							</div>


							<div class="col-12">
								<hr>
							</div>
							<div class="col-12">
								<h3>Extra filtri Token</h3>
							</div>

							<div class="col-12">
								<input type="checkbox" id="website" value="Bike">
								<label for="website">haswebsite</label>
							</div>
							<div class="col-12">
								<input type="checkbox" id="websitecheck" value="websitecheck">
								<label for="websitecheck">haswebsite contract check(buyQuick)</label>
							</div>
							<div class="col-12">
								<input type="checkbox" id="Description" value="Description">
								<label for="Description">hasDescription</label>
							</div>
							<div class="col-12">
								<input type="checkbox" id="TwitterOrTelegram" value="TwitterOrTelegram">
								<label for="TwitterOrTelegram">hasTwitterOrTelegram</label>
							</div>
							<div class="col-12">
								<input type="checkbox" id="TwitterCheck" value="TwitterCheck">
								<label for="TwitterCheck">hasTwitter check</label>
							</div>


							<div class="col-12">
								<hr>
							</div>
							<div class="col-12">
								<h3>Trailing</h3>
							</div>

							<div class="col-12">

								<input type="checkbox" id="enableTrailing">
								<label for="enableTrailing">Abilita Trailing</label>
							</div>
							<div class="col-12">
								<label for="trailingPercent">Trailing % (0.01–0.90)</label>
								<input type="number" step="0.01" id="trailingPercent">
							</div>

							<!-- Break -->
							<div class="col-12 yo">
								<select name="demo-category" id="save-category">
									<option value="">- SAve COnfig -</option>
									<option value="slot1">Slot 1</option>
									<option value="slot2">Slot 2</option>
									<option value="slot3">Slot 3</option>
									<option value="slot4">Slot 4</option>
								</select>
								<button type="button" onclick="saveConfig()">Save</button>
								<button type="button" onclick="loadConfig()">Load</button>
							</div>

							<div class="col-12">
								<ul class="actions">
									<li><input type="submit" value="SAVE" class="primary" /></li>
									<li><input type="button" onclick="loadOptions()" value="LOAD" /></li>

								</ul>
							</div>
						</div>
					</form>

				</section>

			</div>
		</div>

	</div>

	<!-- Scripts -->
	<script src="../public/assetsClient/js/jquery.min.js"></script>
	<script src="../public/assetsClient/js/browser.min.js"></script>
	<script src="../public/assetsClient/js/breakpoints.min.js"></script>
	<script src="../public/assetsClient/js/util.js"></script>
	<script src="../public/assetsClient/js/main.js"></script>
	<script src="../public/scriptt.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script>
		const socket = io();

		socket.on('connect', () => {
			console.log('🔌 Connesso al server con socket.io, ID:', socket.id);
		});

		socket.on('message', (data) => {
			console.log('📩 Messaggio dal server:', data);
		});

		socket.on('newToken', (token) => {
			//console.log('🆕 Nuovo token monitorato:', token);
			// Qui puoi aggiornare la tua interfaccia utente con i dati del nuovo token
		});

		socket.on('event', (token) => {
			//console.log('🆕 Nuovo token monitorato:', token);
			 const oraIt = new Date().toLocaleTimeString("it-IT", {
      timeZone: "Europe/Rome",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
            let logggerEl = document.getElementById("loggerEvent")
            
			logggerEl.textContent += "["+oraIt+"] "+token + "\n";
			// Qui puoi aggiornare la tua interfaccia utente con i dati del nuovo token
			//let size = logggerEl.textLength;
			
		});

		socket.on('logger', (token) => {
			//console.log('🆕 Nuovo token monitorato:', token);
			 
            let logggerEl = document.getElementById("loggerHtml")
            
			logggerEl.textContent += token + "\n";
			// Qui puoi aggiornare la tua interfaccia utente con i dati del nuovo token
			let size = logggerEl.textLength;
			logggerEl.scrollTop = logggerEl.scrollHeight;
			if (size > 90000) logggerEl.textContent = '0\n';
		});

		socket.on('tokenLogger', (token) => {
			//let date = new Date().toLocaleTimeString();

			let searchEl=document.getElementById(`log${token.id}`)
			// Check if the token already exists - search by id
		

			let defiExchange;
			if (token.token.mint.includes('BONK') || token.token.mint.includes('bonk')) {
				defiExchange = `<a href="https://bonk.fun/token/${token.token.mint}" target="_blank">Apri Pool</a>`;
			} else if (token.token.mint.includes('PUMP') || token.token.mint.includes('pump')) {
				defiExchange = `<a href="https://pump.fun/coin/${token.token.mint}" target="_blank">Apri Pool</a>`;
			} else {
				defiExchange = 'N/A';
			}

			const gain = ((token.LivePrice - token.buyPrice) / token.buyPrice) * 100;


			if (searchEl) {// fix se tova id da tokenmonitor element 
				// Update the existing row
				searchEl.cells[1].textContent = `${token.LivePrice}`;
				searchEl.cells[2].textContent = token.buyPrice;
				searchEl.cells[3].textContent = token.startPrice;
				searchEl.cells[4].textContent = token.highPrice;

				searchEl.cells[5].textContent = token.solTrxNum;
				//existingRow.cells[6].textContent = token.solTrxNumMonitor;

				searchEl.cells[7].textContent = token.marketCapSol.toFixed(2);
				searchEl.cells[8].textContent = token.volumeNet.toFixed(2);

				searchEl.cells[9].textContent = token.volume.toFixed(2);
				searchEl.cells[10].textContent = token.time;
				searchEl.cells[11].innerHTML = defiExchange;
				//existingRow.cells[12].innerHTML = defiExchange;

				searchEl.cells[13].innerHTML = `${gain.toFixed(2)}%`;
			} else {
				// Add a new row for the token
				let html = `<tr id='log${token.id}'>
								<td>${token.name}</td>
								<td>${token.LivePrice} SOL</td>
								<td>${token.buyPrice}</td>
								<td>${token.startPrice}</td>
								<td>${token.highPrice}</td>

								<td>${token.solTrxNum}</td>
								<td><button onclick="showTransactions('${token.token.mint}')">Vedi</button></td>

								<td>${token.marketCapSol.toFixed(3)}</td>
								<td>${token.volumeNet.toFixed(3)} SOL</td>

								<td>${token.volume.toFixed(3)} SOL</td>
								<td>${token.time}</td>

								<td>${defiExchange}</td>
								<td> <button onclick="showObject('${token.token.mint}')">info</button></td>

								<td>${gain.toFixed(2)}%</td>
								
							</tr>`;
				document.getElementById("tokenMonitorBody").innerHTML += html;
			}

		})


		let timerRemoveEl =(tokenid)=>{
					setTimeout(() => {

					let searchEl=document.getElementById(`mon${tokenid}`)
					searchEl.remove();
				}, 70000);
				}
		socket.on('tokenMonitor', (token) => {
			//console.log('🆕 Nuovo token monitorato:', token);

			if(!token.name){token.name='N/A'}

			//let searchEl=document.querySelectorAll(`#tokenMonitorBody tr#${token.id}`)
			let searchEl=document.getElementById(`mon${token.id}`)
			// Check if the token already exists in the table
			/*
			let existingRow = Array.from(document.querySelectorAll("#tokenLoggerBody tr")).find(row => {
				return row.cells[0].textContent === token?.name;
			});*/

			let defiExchange;
			if (token.token.mint.includes('BONK') || token.token.mint.includes('bonk')) {
				defiExchange = `<a href="https://bonk.fun/token/${token.token.mint}" target="_blank">Apri Pool</a>`;
			} else if (token.token.mint.includes('PUMP') || token.token.mint.includes('pump')) {
				defiExchange = `<a href="https://pump.fun/coin/${token.token.mint}" target="_blank">Apri Pool</a>`;
			} else {
				defiExchange = 'N/A';
			}


			/*		if (existingRow) {
				// Update the existing row
				existingRow.cells[1].textContent = `${token.LivePrice}`;
				existingRow.cells[2].textContent = token.solTrxNumMonitor;
				existingRow.cells[3].textContent = token.marketCapSol.toFixed(2);
				existingRow.cells[4].textContent = token.volumeNet;
				existingRow.cells[5].textContent = token.volume;
				existingRow.cells[6].textContent = token.timee;
				existingRow.cells[7].innerHTML = `${defiExchange}`*/
			if (searchEl) {
				// Update the existing row
				searchEl.cells[1].textContent = `${token.LivePrice}`;
				searchEl.cells[2].textContent = token.solTrxNumMonitor;
				searchEl.cells[3].textContent = token.marketCapSol.toFixed(2);
				searchEl.cells[4].textContent = token.volumeNet;
				searchEl.cells[5].textContent = token.volume;
				searchEl.cells[6].textContent = token.time;
				searchEl.cells[7].innerHTML = `${defiExchange}`
			} else {
				// Add a new row for the token
				let html = `<tr id='mon${token.id}'>
								<td>${token?.name}</td>
								<td>${token.LivePrice} SOL</td>
								<td>${token.solTrxNumMonitor}</td>
								<td>${token.marketCapSol.toFixed(4)}</td>
								<td>${token.volumeNet.toFixed(2)} SOL</td>
								<td>${token.volume.toFixed(2)} SOL</td>
								<td>${token.time}</td>
								<td>${defiExchange}</td>
								
							</tr>`;
				document.getElementById("tokenLoggerBody").innerHTML += html;

				timerRemoveEl(token.id)
				
			}


		});

		socket.on('disconnect', () => {
			console.log('🔌 Disconnesso dal server');
		});

		

	</script>

</body>

</html>